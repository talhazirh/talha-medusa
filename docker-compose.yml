version: "3.8"
services:
  medusa-talha:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    image: ghcr.io/talhazirh/talha-medusa
    container_name: medusa-talha
    networks:
      - medusa-network
    depends_on:
      - postgres
      - redis
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      BACKEND_URL: ${BACKEND_URL:-http://localhost:9000}
      STORE_CORS: ${STORE_CORS:-http://localhost:8000,https://docs.medusajs.com,https://autolier.pl}
      ADMIN_CORS: ${ADMIN_CORS:-http://localhost:5173,http://localhost:9000,https://docs.medusajs.com,https://admin.autolier.pl}
      AUTH_CORS: ${AUTH_CORS:-http://localhost:5173,http://localhost:9000,https://docs.medusajs.com,https://admin.autolier.pl}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      JWT_SECRET: ${JWT_SECRET:-supersecret}
      COOKIE_SECRET: ${COOKIE_SECRET:-supersecret}
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@postgres/medusa-talha-medusa}
      MEDUSA_WORKER_MODE: ${MEDUSA_WORKER_MODE:-shared}
      DISABLE_ADMIN: ${DISABLE_ADMIN:-false}
    volumes:
      - medusa-uploads:/app/uploads
      - medusa-static:/app/static
    ports:
      - "9000:9000"
      - "7001:7001"

  postgres:
    image: postgres:15-alpine
    networks:
      - medusa-network
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-medusa-talha-medusa}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    networks:
      - medusa-network
    volumes:
      - redis-data:/data

volumes:
  medusa-uploads:
  medusa-static:
  postgres-data:
  redis-data:

networks:
  medusa-network:
    driver: bridge